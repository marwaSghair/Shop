/* You can add global styles to this file, and also import other style files */
@import "./_overrides.scss";
[class^="pi-"], [class*=" pi-"], .cursor-pointer {
  cursor: pointer;
}
*, *:before, *:after {
  margin: 0;
  padding: 0;
  outline: none;
  box-sizing: border-box;
}

*:focus {
  outline: 0;
}
a {
  color: $black;
  text-decoration: none;
  background-color: transparent;
  &:hover {
    text-decoration: none !important;
  }
}

ul {
  margin: 0;
  padding: 0;
  list-style: none;
}

html, body {
  height: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}

html {
  font-size: 14px;
  overflow-x: hidden;
}

body {
  //height: 100%;
  font-family: $lato;
  font-size: 1rem;
  color: $primary-color;
  background-color: $white;
}
.grid {
  margin-top: 0 !important;
}
.p-text-underline {
  text-decoration: underline;
}
.text-required {
  color: $red;
  font-size: 0.9rem;
}
.p-button.p-button-danger {
  color: $white;
  background: $red;
  border: 1px solid $red;
  &:enabled:hover {
    background: $red;
    color: $white;
    border-color: $red;
  }
  &:focus {
    box-shadow: 0 0 0 0.2rem #e2071445;
  }
}
.p-button.p-button-success {
  color: $black-light;
  background: $dark-green-light;
  border-color: $dark-green-light;
  &:enabled:hover {
    background: $dark-green-light;
    color: $black-light;
    border-color: $dark-green-light;
  }
  &:enabled:focus, &:focus {
    box-shadow: 0 0 0 0.2rem $dark-green-light;
  }
}
.p-button.p-button-success.p-button-outlined {
  background-color: transparent;
  color: $dark-green;
  border: 1px solid $dark-green;
}
.p-button.p-button-success.p-button-outlined:enabled:active, .p-button.p-button-success.p-button-outlined:enabled:hover {
  background: $dark-green-light;
  color: $black-light;
  border: 1px solid $dark-green;
}
.p-bg-red-light {
  background: $red-light !important;
  border-color: #f8cccc !important;
  color: $red !important;
}
.p-bg-green-light {
  background: $green-light !important;
  border: $green-light !important;
  color: $green !important;
  &:focus {
    box-shadow: 0 0 0 0.2rem $green-light;
  }
}

.p-text-red {
  color: $red;
}
.p-text-green {
  color: $green;
}
.p-text-green-dark {
  color: $dark-green;
}
/* ---------- fonts  ---------- */
.lato-black {
  font-family: $lato;
  font-weight: 900 !important;
  font-style: normal;
}
.lato-bold {
  font-family: $lato;
  font-weight: bold !important;
  font-style: normal;
}
.lato-black-Italic {
  font-family: $lato;
  font-weight: 900 !important;
  font-style: italic;
}
.lato-bold-italic {
  font-family: $lato;
  font-weight: bold !important;
  font-style: italic;
}
.lato-italic {
  font-family: $lato;
  font-weight: normal;
  font-style: italic;
}
.lato-light{
  font-family: $lato;
  font-weight: 300 !important;
  font-style: normal;
}
.lato-regular{
  font-family: $lato;
  font-weight: normal;
  font-style: normal;
}
.lato-semibold{
  font-family: $lato;
  font-weight: 600;
  font-style: normal;
}
/*----------checkbox-box + radio + select-button----------*/
.p-checkbox .p-checkbox-box.p-highlight {
  border-color: $dark-green;
  background: $dark-green;
}
.p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box.p-highlight:hover {
  border-color: $dark-green;
  background: $dark-green;
}
.p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box:hover {
  border-color: $dark-green;
}
.p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box.p-focus {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
  border-color: $dark-green;
}
.p-radiobutton .p-radiobutton-box:not(.p-disabled):not(.p-highlight):hover {
  border-color: $dark-green;
}
.p-radiobutton .p-radiobutton-box:not(.p-disabled).p-focus {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
  border-color: $dark-green;
}
.p-radiobutton .p-radiobutton-box.p-highlight {
  border-color: $dark-green;
  background: $dark-green;
}
.p-radiobutton .p-radiobutton-box.p-highlight:not(.p-disabled):hover {
  border-color: $dark-green;
  background:$dark-green;
}
.p-radiobutton .p-radiobutton-box:not(.p-disabled):not(.p-highlight):hover {
  border-color: $dark-green;
}

.p-selectbutton .p-button.p-highlight {
  background: $dark-green;
  border-color: $dark-green;
}
.p-selectbutton .p-button.p-highlight:hover {
  background: $dark-green;
  border-color: $dark-green;
}
.p-selectbutton .p-button:focus {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
}
.p-inputswitch.p-focus .p-inputswitch-slider {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
}
.p-inputswitch:not(.p-disabled):hover .p-inputswitch-slider {
  background: #4bab9a6b;
}
.p-inputswitch.p-inputswitch-checked .p-inputswitch-slider {
  background: $dark-green;
}
.p-inputswitch.p-inputswitch-checked:not(.p-disabled):hover .p-inputswitch-slider {
  background: $dark-green;
}
.p-autocomplete .p-autocomplete-multiple-container .p-autocomplete-token {
  background: $dark-green-light;
  color: $black-light;
}
.p-autocomplete .p-autocomplete-multiple-container:not(.p-disabled):hover {
  border-color: $dark-green;
}
.p-autocomplete .p-autocomplete-multiple-container:not(.p-disabled).p-focus {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
  border-color: $dark-green;
}
/* ---------- Paginator  ---------- */
.p-paginator .p-paginator-pages .p-paginator-page.p-highlight {
  background: $dark-green-light;
  border-color: $dark-green-light;
  color: $black-light;
}
.p-link:focus {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
}
.p-dropdown:not(.p-disabled):hover {
  border-color: $dark-green;
}
.p-dropdown:not(.p-disabled).p-focus {
  outline: 0 none;
  outline-offset: 0;
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
  border-color: $dark-green;
}
.p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight {
  background: $dark-green-light;
}
/* ----------custom scrollbar  ---------- */
/* width */
//::-webkit-scrollbar {
//  width: 1px;
//}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px grey;
  border-radius: 10px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: red;
  border-radius: 10px;
}
/* ---------- Input ---------- */
label {
  display: block;
  font-weight: bold;
  margin-bottom: 0.5rem;
  font-size: 0.9rem;
}
.p-inputtext.ng-dirty.ng-invalid {
  border-color: $red;
}
.p-inputtext:enabled:focus {
  box-shadow: 0 0 0 0.2rem #4bab9a6b;
  border-color: $dark-green;
}
.p-inputtext:enabled:hover {
  border-color: $dark-green;
}
.autocomplete-container {
  .input-container{
    input{
      color: $text-grey !important;
    }
  }
}

input {
  //-webkit-text-fill-color: $text-blue3;
  color: $text-grey;
  font-size: 1rem;
  width: 100%;
  &::-webkit-credentials-auto-fill-button {
    visibility: hidden;
    display: none !important;
    pointer-events: none;
    height: 0;
    width: 0;
    margin: 0;
  }
  &::-webkit-input-placeholder {
    color: $text-grey;
  }
  &::-moz-placeholder {
    color: $text-grey;
  }
  &:-ms-input-placeholder {
    color: $text-grey;
  }
  &:-moz-placeholder {
    color: $text-grey;
  }
  &::placeholder {
    color: $text-grey !important;
  }
  &::-webkit-outer-spin-button {
    -webkit-appearance: none;
  }
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }
  &:-webkit-autofill {
    -webkit-text-fill-color: $text-grey;
    -webkit-box-shadow: 0 0 0 1000px white inset !important;
    transition: background-color 5000s ease-in-out 0s;
    color: $text-grey;
    &:hover {
      -webkit-text-fill-color: $text-grey;
      -webkit-box-shadow: 0 0 0 1000px white inset !important;
      transition: background-color 5000s ease-in-out 0s;
    }
    &:focus {
      -webkit-text-fill-color: $text-grey;
      -webkit-box-shadow: 0 0 0 1000px white inset !important;
      transition: background-color 5000s ease-in-out 0s;
    }
  }
}